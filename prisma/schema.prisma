// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  // events    Event[]

  fcmToken  String?
  reminders Reminder[]
  accounts  Account[]
  sessions  Session[]
}

// Necessary for Next auth
model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  refresh_token_expires_in Int?
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id     String  @id @default(cuid())
  name   String  @unique
  events Event[]

  @@index([id, name])
}

model Event {
  id          String     @id @default(cuid())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  title       String
  description String?
  location    String
  link        String     
  virtual     Boolean
  startDate   DateTime
  endDate     DateTime
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  String
  reminders   Reminder[]
}

model Reminder {
  id        String   @id @default(cuid())
  user      User     @relation(references: [id], fields: [userId])
  userId    String
  event     Event    @relation(references: [id], fields: [eventId])
  eventId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
